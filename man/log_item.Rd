% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/log_item.R
\name{log_item}
\alias{log_item}
\title{Primary utility for logging items to text metadata items for the stpR package.}
\usage{
log_item(
  type,
  item,
  add_item = NULL,
  priority = NULL,
  stp_id = "99999",
  project_dictionary = get_project_dictionary(),
  project_directory = here::here()
)
}
\arguments{
\item{type}{String value indicating type of item to log.  Either "ALERT", "TODO", or "COMMENT".}

\item{item}{String value of the item to log.}

\item{add_item}{Additional item to log.  This is used for the assert_distinct, assert_cases, assert_order output.}

\item{priority}{String value indicating priority of item to log.  TBD if this is still a useful field to include}

\item{stp_id}{Id of the stp_ob entity. Defaults to "99999".  Not as significant in usage as with other strR logging functions, such as eval_map(), etc.}

\item{project_dictionary}{The project_dictionary object, which by default is output by the \code{get_project_dictionary()} function.}

\item{project_directory}{The project_directory object, which by default is output by the \code{here::here()} function.}
}
\description{
Logs assert failures, comments, and todos for review.  Both save_metadata_global and include_metadata_log_items must be set to TRUE in the project_dictionary object for items to be logged.
Expected that during initial setup steps, may want to avoid logging all log_items values.
To avoid overhead of maintaining meaningful, individual ids for each log item, the default stp_id is set to "99999".  All instances will be logged (including duplicate items, etc.).
Function will be created to remove individual or all log items. For a final run of this documentation per iteratio of data set processed.
}
\examples{
\donttest{
# Example 1 ----------------------------------
log_item(
  type = "TODO",
  item = "Create function to reset all log_item metadata",
  priority = "1"
 )

# Example 2 ----------------------------------
# Called by assert_cases.R function
log_item(type = "ALERT",
    item = eval_logic_assert_string,
    priority = "1",
 )
}
}
