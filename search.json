[{"path":"https://rweberc.github.io/stpR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Ryan C Weber Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://rweberc.github.io/stpR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"https://rweberc.github.io/stpR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2024). stpR: Package (One Line, Title Case). R package version 0.0.0.9000, https://rweberc.github.io/stpR/reference/index.html.","code":"@Manual{,   title = {stpR: What the Package Does (One Line, Title Case)},   author = {First Last},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://rweberc.github.io/stpR/reference/index.html}, }"},{"path":"https://rweberc.github.io/stpR/index.html","id":"stpr","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"Data processing setup package.","code":""},{"path":"https://rweberc.github.io/stpR/reference/assert_cases.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrates logical statement asserts into the stpR object. — assert_cases","title":"Integrates logical statement asserts into the stpR object. — assert_cases","text":"Asserts statement TRUE. , prints warning logs alert.","code":""},{"path":"https://rweberc.github.io/stpR/reference/assert_cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrates logical statement asserts into the stpR object. — assert_cases","text":"","code":"assert_cases(   logic,   stp_id = \"99999\",   project_dictionary = get_project_dictionary(),   project_directory = here::here() )"},{"path":"https://rweberc.github.io/stpR/reference/assert_cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrates logical statement asserts into the stpR object. — assert_cases","text":"logic Statement evaluates TRUE/FALSE. stp_id Id stp_ob entity. Defaults \"99999\". project_dictionary Project dictionary. Defaults global dictionary. project_directory Project directory. Defaults global directory based ::() call.","code":""},{"path":"https://rweberc.github.io/stpR/reference/assert_cases.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Integrates logical statement asserts into the stpR object. — assert_cases","text":"throw_assert_errors project_dictionary TRUE, error thrown instead warning. throw_assert_errors FALSE console_output_global TRUE project_dictionary, warning printed console.","code":""},{"path":"https://rweberc.github.io/stpR/reference/assert_cases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Integrates logical statement asserts into the stpR object. — assert_cases","text":"","code":"# \\donttest{  assert_cases(   logic = qa_tbl %>%     dplyr::filter(trt == \"Drug A\" & stage == \"T3\") %>%     nrow() == 0,   stp_id = 'assert_trt_vs_stage' ) #> Warning: qa_tbl %>% dplyr::filter(trt == \"Drug A\" & stage == \"T3\") %>% nrow() == 0  -  FAILED. # }"},{"path":"https://rweberc.github.io/stpR/reference/assert_distinct.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrates asserts of uniqueness by key variables into the stpR object. — assert_distinct","title":"Integrates asserts of uniqueness by key variables into the stpR object. — assert_distinct","text":"Asserts rows data set unique one grouping variables. , prints warning logs alert.","code":""},{"path":"https://rweberc.github.io/stpR/reference/assert_distinct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrates asserts of uniqueness by key variables into the stpR object. — assert_distinct","text":"","code":"assert_distinct(   data_df,   group_by_vars = NULL,   stp_id = \"99999\",   project_dictionary = get_project_dictionary(),   project_directory = here::here() )"},{"path":"https://rweberc.github.io/stpR/reference/assert_distinct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrates asserts of uniqueness by key variables into the stpR object. — assert_distinct","text":"data_df data set evaluated uniqueness. group_by_vars string vector strings representing fields within data set group . stp_id character ID stp_ob entity. Defaults \"99999\". project_dictionary Project dictionary. Defaults global dictionary. project_directory Project directory. Defaults global directory based ::() call.","code":""},{"path":"https://rweberc.github.io/stpR/reference/assert_distinct.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Integrates asserts of uniqueness by key variables into the stpR object. — assert_distinct","text":"throw_assert_errors project_dictionary TRUE, error thrown instead warning. throw_assert_errors FALSE console_output_global TRUE project_dictionary, warning printed console.","code":""},{"path":"https://rweberc.github.io/stpR/reference/assert_distinct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Integrates asserts of uniqueness by key variables into the stpR object. — assert_distinct","text":"","code":"# \\donttest{ temp_dup_tbl <- qa_tbl %>%   dplyr::bind_rows(qa_tbl %>%             dplyr::slice(1))  assert_distinct(   data_df = temp_dup_tbl,   group_by_vars = \"col_id\" ) #> Cases failing distinct: #> # A tibble: 1 × 21 #>   col_id event_date   age stage   los   ebl   asa trt    approach    visit_codes #>    <int> <date>     <dbl> <chr> <int> <dbl> <int> <chr>  <chr>       <chr>       #> 1     68 2017-12-18    46 T2      103     0     2 Drug B laparoscopy 34342       #> # ℹ 11 more variables: EVENT_DATE_RAW <chr>, AGE_RAW <chr>, STAGE_RAW <chr>, #> #   LOS_RAW <chr>, EBL_RAW <chr>, ASA_RAW <chr>, TRT_RAW <chr>, #> #   APPROACH_RAW <chr>, VISIT_CODES_RAW <chr>, visit_type <chr>, #> #   errorType <chr> #> Warning: Assert distinct failed.  # }"},{"path":"https://rweberc.github.io/stpR/reference/assert_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrate asserts of value order between two or more columns in a data set — assert_order","title":"Integrate asserts of value order between two or more columns in a data set — assert_order","text":"throw_assert_errors project_dictionary TRUE, error thrown instead warning. throw_assert_errors FALSE console_output_global TRUE project_dictionary, warning printed console.","code":""},{"path":"https://rweberc.github.io/stpR/reference/assert_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrate asserts of value order between two or more columns in a data set — assert_order","text":"","code":"assert_order()"},{"path":"https://rweberc.github.io/stpR/reference/assert_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrate asserts of value order between two or more columns in a data set — assert_order","text":"xyz abc","code":""},{"path":"https://rweberc.github.io/stpR/reference/assert_order.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Integrate asserts of value order between two or more columns in a data set — assert_order","text":"","code":"# \\donttest{   # }"},{"path":"https://rweberc.github.io/stpR/reference/create_stp_markdown.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility to create an Rmarkdown file that can be used to generate a report of the current state of the data — create_stp_markdown","title":"Utility to create an Rmarkdown file that can be used to generate a report of the current state of the data — create_stp_markdown","text":"Data summary created according current state stp_object.  stp_object read current_metadata_path project_dictionary. stp_object filtered according limit_to_highlight limit_to_issue arguments, depending interest current report. output also filtered include reference update objects include_reference_object include_update_object set TRUE. stp_ids report = TRUE included output.","code":""},{"path":"https://rweberc.github.io/stpR/reference/create_stp_markdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility to create an Rmarkdown file that can be used to generate a report of the current state of the data — create_stp_markdown","text":"","code":"create_stp_markdown(   include_reference_object = TRUE,   include_update_object = FALSE,   limit_to_highlight = FALSE,   limit_to_issue = FALSE,   rmarkdown_path = NULL,   report_filename = \"summary_report\",   render_markdown = TRUE,   project_dictionary = get_project_dictionary(),   project_directory = here::here() )"},{"path":"https://rweberc.github.io/stpR/reference/create_stp_markdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility to create an Rmarkdown file that can be used to generate a report of the current state of the data — create_stp_markdown","text":"include_reference_object TRUE, reference object included output.  Default TRUE.  reference object object represents current state data output last run stpR setup function, eval_map(), eval_summary(), assert_distinct(), etc. include_update_object TRUE, update object included output. Default FALSE. update object represents differences recorded current state stp_object comparison object (compare_metadata_path project_dictionary), determined last run stpR setup functions data setup. limit_to_highlight TRUE, output filtered include stp_ids highlight = TRUE. Default FALSE. limit_to_issue TRUE, output filtered include stp_ids issue = TRUE. Default FALSE. rmarkdown_path path save output rmarkdown file. NULL, output file saved current_report_path project_dictionary. report_filename name output file, without extension. Default \"summary_report\". render_markdown TRUE, output rmarkdown file rendered html path .rmd file output. project_dictionary project_dictionary object, default output get_project_dictionary() function. project_directory project_directory object, default output ::() function.","code":""},{"path":"https://rweberc.github.io/stpR/reference/create_stp_markdown.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Utility to create an Rmarkdown file that can be used to generate a report of the current state of the data — create_stp_markdown","text":"output .rmd file can rendered html.  render_markdown set TRUE, html markdown also rendered. rmarkdown_path NULL, output file saved current_report_path project_dictionary.","code":""},{"path":"https://rweberc.github.io/stpR/reference/create_stp_markdown.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility to create an Rmarkdown file that can be used to generate a report of the current state of the data — create_stp_markdown","text":"","code":"# \\donttest{  create_stp_markdown() #>  #>  #> processing file: summary_report.rmd #> 1/2                   #> 2/2 [unnamed-chunk-1] #>  #> Quitting from lines 6-16 [unnamed-chunk-1] (summary_report.rmd) #> Error in library(tidyverse): there is no package called 'tidyverse'  # }"},{"path":"https://rweberc.github.io/stpR/reference/create_stp_ob.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility to create a new stp_ob object. — create_stp_ob","title":"Utility to create a new stp_ob object. — create_stp_ob","text":"Usually run beginning processing new data set.","code":""},{"path":"https://rweberc.github.io/stpR/reference/create_stp_ob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility to create a new stp_ob object. — create_stp_ob","text":"","code":"create_stp_ob(   save_to_path = NULL,   reset = FALSE,   dir = here::here(),   project_dictionary = get_project_dictionary() )"},{"path":"https://rweberc.github.io/stpR/reference/create_stp_ob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility to create a new stp_ob object. — create_stp_ob","text":"save_to_path NULL, attempt save current_metadata_path project_dictionary. reset TRUE, overwrite existing stp_ob object save_to_path. dir directory save stp_ob object , default determined ::() function. project_dictionary project_dictionary object, default determined get_project_dictionary() function.","code":""},{"path":"https://rweberc.github.io/stpR/reference/create_stp_ob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility to create a new stp_ob object. — create_stp_ob","text":"stp_ob list object documents current state project evaluation reporting.","code":""},{"path":[]},{"path":"https://rweberc.github.io/stpR/reference/eval_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Primary setup utility for stpR. — eval_map","title":"Primary setup utility for stpR. — eval_map","text":"function used create initial metadata objects used setup utilities stpR. Processes stp_ob artifacts multiple scenarios:","code":""},{"path":"https://rweberc.github.io/stpR/reference/eval_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Primary setup utility for stpR. — eval_map","text":"","code":"eval_map(   data_df = NULL,   from = NULL,   to = NULL,   std_proc_na = NULL,   highlight = FALSE,   issue = FALSE,   notes = NULL,   stp_id = NULL,   save_artifact = TRUE,   report = TRUE,   perform_compare = TRUE,   project_dictionary = get_project_dictionary(),   project_directory = here::here(),   summary = FALSE )"},{"path":"https://rweberc.github.io/stpR/reference/eval_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Primary setup utility for stpR. — eval_map","text":"data_df data frame evaluated. string value column(s) data frame represent columns processed current data set string value column(s) data frame represent columns processed current data set. std_proc_na function applied column(s) determine values considered \"standard processing\" NA values.  field used cases processing values numbers, necessary know \"typically\" processed values, helpful know values readily processed standard processing well handled current data set. highlight boolean tag denote whether processing interest highlighting reporting current state data.  Generally, type mapping field processing interest routinely review data set processing. issue boolean tag denote whether processing interest noting inspection issue reporting current state data. notes string value included reporting current state data. stp_id string value used identifier processing reporting current state data. default, column. save_artifact boolean tag denote whether processing saved artifact.  false just wanted use function count() type check benefit console output control. report boolean tag denote whether processing included reporting current state data.  May false scenarios want routinely look output processing, want alerted updates values. perform_compare boolean tag denote whether processing compared previous data artifact. used comparison current data previous data artifacts.  true want \"enforce\" given relationship project_dictionary project_dictionary object, default output get_project_dictionary() function. project_directory project_directory object, default output ::() function. summary boolean tag denote whether processing summary data rather mapping values.  Primarily true function called eval_summary().","code":""},{"path":"https://rweberc.github.io/stpR/reference/eval_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Primary setup utility for stpR. — eval_map","text":"data frame current mapping updates mapping, relevant.","code":""},{"path":"https://rweberc.github.io/stpR/reference/eval_map.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Primary setup utility for stpR. — eval_map","text":"Initial processing raw data categorical \"continuous\" fields (depending whether std_proc_na NULL) General summary value combinations several columns: utility, eval_summary() also utilizes functionality utility, well: summary = TRUE, data_df assumed summary table rather processing values commonly case use eval_map(). Comparison current data previous data artifacts Additional creation tags items note \"issues\" \"highlights\" reporting current state data","code":""},{"path":"https://rweberc.github.io/stpR/reference/eval_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Primary setup utility for stpR. — eval_map","text":"","code":"# \\donttest{   # mapping with issue   eval_map(     data_df = qa_tbl,     from = \"TRT_RAW\",     to = \"trt\",     notes = \"Note multiple raw processed values associated with each treatment type\"   ) #> Current Mapping: #> # A tibble: 4 × 3 #> # Groups:   trt, TRT_RAW [4] #>   trt    TRT_RAW         n #>   <chr>  <chr>       <int> #> 1 Drug A Drug A        103 #> 2 Drug A First Group     1 #> 3 Drug B Drug 2          1 #> 4 Drug B Drug B        195    qa_tbl$age <- as.numeric(qa_tbl$AGE_RAW) #> Warning: NAs introduced by coercion   qa_tbl$age[qa_tbl$AGE_RAW == \"twenty\"] <- 20    # 'continuous' field with issue   eval_map(     data_df = qa_tbl,     from = \"AGE_RAW\",     to = \"age\",     std_proc_na = as.numeric,     notes = \"Note processing of value of 'twenty' from AGE_RAW\"   ) #> Current Mapping of Standard Processing NA Values: #> # A tibble: 1 × 3 #> # Groups:   age, AGE_RAW [1] #>     age AGE_RAW     n #>   <dbl> <chr>   <int> #> 1    20 twenty      1  # }"},{"path":"https://rweberc.github.io/stpR/reference/eval_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Create artifact for summary cases. — eval_summary","title":"Create artifact for summary cases. — eval_summary","text":"use stpR setup cases pre-defined mapping values interest tracked, variables strictly associated relationship.  likely utilized","code":""},{"path":"https://rweberc.github.io/stpR/reference/eval_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create artifact for summary cases. — eval_summary","text":"","code":"eval_summary(   summary_df = NULL,   key,   highlight = FALSE,   issue = FALSE,   notes = NULL,   stp_id,   save_artifact = TRUE,   report = TRUE,   perform_compare = TRUE,   project_dictionary = get_project_dictionary(),   project_directory = here::here() )"},{"path":"https://rweberc.github.io/stpR/reference/eval_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create artifact for summary cases. — eval_summary","text":"summary_df data frame, pre-summarized, associated documentation item. key String value column name used key summary_df.  utilized similarlly column eval_map() function.  scenarios, deciding key variable arbitrary, choosing support additional comparison functionality associated artifact items. highlight boolean tag denote whether processing interest highlighting reporting current state data.  Generally, type mapping field processing interest routinely review data set processing. issue boolean tag denote whether processing interest noting inspection issue reporting current state data. notes string value included reporting current state data. stp_id string value used identifier processing reporting current state data. default, column. save_artifact boolean tag denote whether processing saved artifact.  false just wanted use function count() type check benefit console output control. report boolean tag denote whether processing included reporting current state data.  May false scenarios want routinely look output processing, want alerted updates values. perform_compare boolean tag denote whether processing compared previous data artifact. used comparison current data previous data artifacts.  true want \"enforce\" given relationship project_dictionary project_dictionary object, default output get_project_dictionary() function. project_directory project_directory object, default output ::() function.","code":""},{"path":"https://rweberc.github.io/stpR/reference/eval_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create artifact for summary cases. — eval_summary","text":"data frame current mapping updates mapping, relevant.","code":""},{"path":"https://rweberc.github.io/stpR/reference/eval_summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create artifact for summary cases. — eval_summary","text":"function calls eval_map() summary parameter set TRUE.  See eval_map() additional details.","code":""},{"path":"https://rweberc.github.io/stpR/reference/eval_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create artifact for summary cases. — eval_summary","text":"","code":"# \\donttest{   eval_summary(     summary_df = dplyr::count(qa_tbl, approach, asa),     key = \"proc_name\",     notes = \"summary proc, ASA notes\",     stp_id = \"comp_approach_asa\"   ) #> Current Mapping: #> # A tibble: 5 × 3 #>   approach      asa     n #>   <chr>       <int> <int> #> 1 laparoscopy     1    62 #> 2 laparoscopy     2    55 #> 3 laparoscopy     3    56 #> 4 open            4    58 #> 5 open            5    69  # }"},{"path":"https://rweberc.github.io/stpR/reference/exec_view.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute and view highlighted text.  Wrapper for View(). — exec_view","title":"Execute and view highlighted text.  Wrapper for View(). — exec_view","text":"Run following create shortcut: rstudio.prefs::use_rstudio_keyboard_shortcut(\"Ctrl+Shift+W\" = \"AmplioHelpers::exec_view\")","code":""},{"path":"https://rweberc.github.io/stpR/reference/exec_view.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute and view highlighted text.  Wrapper for View(). — exec_view","text":"","code":"exec_view()"},{"path":"https://rweberc.github.io/stpR/reference/get_project_dictionary.html","id":null,"dir":"Reference","previous_headings":"","what":"Read stpR project_dictionary from environment. — get_project_dictionary","title":"Read stpR project_dictionary from environment. — get_project_dictionary","text":"default, attempts read project_dictionary file current parent environment.","code":""},{"path":"https://rweberc.github.io/stpR/reference/get_project_dictionary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read stpR project_dictionary from environment. — get_project_dictionary","text":"","code":"get_project_dictionary(   filename = \"project_dictionary.yaml\",   dir = here::here() )"},{"path":"https://rweberc.github.io/stpR/reference/get_project_dictionary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read stpR project_dictionary from environment. — get_project_dictionary","text":"filename name project_dictionary file read.  Default standard \"project_dictionary.yaml\". dir directory project_dictionary file located.  Default current working directory.","code":""},{"path":"https://rweberc.github.io/stpR/reference/get_project_dictionary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read stpR project_dictionary from environment. — get_project_dictionary","text":"project_dictionary list object contains project_dictionary.","code":""},{"path":"https://rweberc.github.io/stpR/reference/get_project_dictionary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read stpR project_dictionary from environment. — get_project_dictionary","text":"","code":"# \\donttest{    get_project_dictionary() #> $current_metadata_path #> [1] \"secure_data/2023_01_01/stp_ob.rds\" #>  #> $compare_metadata_path #> [1] \"secure_data/2022_01_01/stp_ob.rds\" #>  #> $current_report_path #> [1] \"secure_data/2023_01_01\" #>  #> $save_metadata_global #> [1] TRUE #>  #> $compare_artifacts_global #> [1] FALSE #>  #> $console_output_global #> [1] TRUE #>  #> $allow_updates_to_existing_individual_artifacts #> [1] TRUE #>  #> $include_metadata_log_items #> [1] TRUE #>  #> $throw_assert_errors #> [1] FALSE #>   # }"},{"path":"https://rweberc.github.io/stpR/reference/get_reporting_cases.html","id":null,"dir":"Reference","previous_headings":"","what":"Return cases relevant for reporting — get_reporting_cases","title":"Return cases relevant for reporting — get_reporting_cases","text":"Based current state stpR object.  Currently, returns values flagged reporting (.e., report = TRUE). future, function also allow returning \"non-report\" items updates associated compared previous data set.","code":""},{"path":"https://rweberc.github.io/stpR/reference/get_reporting_cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return cases relevant for reporting — get_reporting_cases","text":"","code":"get_reporting_cases(   stp_ob = get_stp_object(),   limit_to_highlight = FALSE,   limit_to_issue = FALSE )"},{"path":"https://rweberc.github.io/stpR/reference/get_reporting_cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return cases relevant for reporting — get_reporting_cases","text":"stp_ob stpR artifact object. Default current state stpR object. limit_to_highlight boolean limit returned values highlighted limit_to_issue boolean limit returned values flagged issues","code":""},{"path":"https://rweberc.github.io/stpR/reference/get_reporting_cases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return cases relevant for reporting — get_reporting_cases","text":"dataframe cases flagged reporting","code":""},{"path":"https://rweberc.github.io/stpR/reference/get_reporting_cases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return cases relevant for reporting — get_reporting_cases","text":"","code":"# \\donttest{    get_reporting_cases() #> # A tibble: 3 × 10 #>   stp_id         notes highlight issue report ref_ob     update_ob has_update_ob #>   <chr>          <chr> <lgl>     <lgl> <lgl>  <list>     <list>            <dbl> #> 1 trt            Note… FALSE     FALSE TRUE   <gropd_df> <NULL>                0 #> 2 age            Note… FALSE     FALSE TRUE   <gropd_df> <NULL>                0 #> 3 comp_approach… summ… FALSE     FALSE TRUE   <tibble>   <NULL>                0 #> # ℹ 2 more variables: reference_object_row <lgl>, filter_object_row <lgl>  # }"},{"path":"https://rweberc.github.io/stpR/reference/get_stp_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns stpR object. — get_stp_object","title":"Returns stpR object. — get_stp_object","text":"Utility quickly pull stpR object file.  Utilized many strR functions purpose.","code":""},{"path":"https://rweberc.github.io/stpR/reference/get_stp_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns stpR object. — get_stp_object","text":"","code":"get_stp_object(   file_type = \"current\",   dir = here::here(),   project_dictionary = get_project_dictionary() )"},{"path":"https://rweberc.github.io/stpR/reference/get_stp_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns stpR object. — get_stp_object","text":"file_type type stpR object return, either \"current\" \"compare\".  Default \"current\". dir directory save stp_ob object , default determined ::() function. project_dictionary project_dictionary object, default determined get_project_dictionary() function.","code":""},{"path":"https://rweberc.github.io/stpR/reference/get_stp_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns stpR object. — get_stp_object","text":"stp_ob list object documents current state project evaluation reporting.","code":""},{"path":"https://rweberc.github.io/stpR/reference/get_stp_object.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Returns stpR object. — get_stp_object","text":"desc details","code":""},{"path":"https://rweberc.github.io/stpR/reference/get_stp_object.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns stpR object. — get_stp_object","text":"","code":"# \\donttest{  get_stp_object() #> $mapping_items #> # A tibble: 3 × 15 #>   stp_id            df_name from  to    std_proc_na notes highlight issue report #>   <chr>             <chr>   <chr> <chr> <list>      <chr> <lgl>     <lgl> <lgl>  #> 1 trt               qa_tbl  TRT_… trt   <NULL>      Note… FALSE     FALSE TRUE   #> 2 age               qa_tbl  AGE_… age   <fn>        Note… FALSE     FALSE TRUE   #> 3 comp_approach_asa NA      proc… NA    <NULL>      summ… FALSE     FALSE TRUE   #> # ℹ 6 more variables: perform_compare <lgl>, compare_path <chr>, ref_ob <list>, #> #   update_ob <list>, has_update_ob <dbl>, timestamp <dttm> #>  #> $filter_items #> # A tibble: 0 × 15 #> # ℹ 15 variables: df_name <chr>, id_vars <chr>, group_by_vars <chr>, #> #   keep_logic <chr>, stp_id <chr>, notes <chr>, highlight <lgl>, issue <lgl>, #> #   report <lgl>, perform_compare <lgl>, compare_path <chr>, ref_ob <list>, #> #   update_ob <list>, has_update_ob <lgl>, timestamp <dttm> #>  #> $text_items #> # A tibble: 3 × 6 #>   type  stp_id              item           add_item priority timestamp           #>   <chr> <chr>               <chr>          <list>   <chr>    <dttm>              #> 1 ALERT assert_trt_vs_stage \"qa_tbl %>% d… <NULL>   1        2024-01-02 22:32:08 #> 2 ALERT assert_trt_vs_stage \"    nrow() =… <NULL>   1        2024-01-02 22:32:08 #> 3 ALERT 99999               \"Assert disti… <int>    1        2024-01-02 22:32:09 #>   # }"},{"path":"https://rweberc.github.io/stpR/reference/keep_cases.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility to filter cases from a data set that do not meet a specified condition. — keep_cases","title":"Utility to filter cases from a data set that do not meet a specified condition. — keep_cases","text":"utility also creates artifact removed cases reporting comparison separate data set processing.","code":""},{"path":"https://rweberc.github.io/stpR/reference/keep_cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility to filter cases from a data set that do not meet a specified condition. — keep_cases","text":"","code":"keep_cases(   data_df = NULL,   stp_id = NULL,   id_vars,   non_id_vars,   group_by_vars = NULL,   keep_logic,   highlight = FALSE,   issue = FALSE,   notes = NULL,   save_artifact = TRUE,   report = TRUE,   perform_compare = TRUE,   return_only_filtered = FALSE,   project_dictionary = get_project_dictionary(),   project_directory = here::here() )"},{"path":"https://rweberc.github.io/stpR/reference/keep_cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility to filter cases from a data set that do not meet a specified condition. — keep_cases","text":"data_df data set evaluated possibly filtered. stp_id unique identifier filter instance. id_vars string vector strings representing fields within data set use identifiers. non_id_vars string vector strings representing fields within data set use non-identifiers. group_by_vars string vector strings representing fields within data set group . keep_logic string representing logic used filter data set. Default keep cases logic evaluates TRUE. highlight logical value indicating whether highlight filtered cases. Default FALSE. issue logical value indicating whether flag filtered cases issue. Default FALSE. notes string representing notes associated update artifact. save_artifact logical value indicating whether save update artifact. Default TRUE. report logical value indicating whether include update artifact report. Default TRUE. perform_compare logical value indicating whether perform comparison update artifact compare artifact. Default TRUE. return_only_filtered logical value indicating whether return filtered cases data set cases removed.  Default FALSE project_dictionary project_dictionary object, default output get_project_dictionary() function. project_directory project_directory object, default output ::() function.","code":""},{"path":"https://rweberc.github.io/stpR/reference/keep_cases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility to filter cases from a data set that do not meet a specified condition. — keep_cases","text":"data frame. Depending return_only_filtered argument, either data set filtered cases (default), filtered data .","code":""},{"path":"https://rweberc.github.io/stpR/reference/keep_cases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility to filter cases from a data set that do not meet a specified condition. — keep_cases","text":"","code":"# \\donttest{  qa_tbl <- keep_cases(   data_df = qa_tbl,   stp_id = \"age_filter\",   id_vars = \"col_id\",   non_id_vars = \"age\",   keep_logic = \"age >= 18\",   notes = \"Remove patients younger than 18 years old\" ) #> Error in dplyr::filter(., (!eval(parse(text = keep_logic))) %>% tidyr::replace_na(FALSE)): ℹ In argument: `(!eval(parse(text = keep_logic))) %>% #>   tidyr::replace_na(FALSE)`. #> Caused by error in `loadNamespace()`: #> ! there is no package called ‘tidyr’  # }"},{"path":"https://rweberc.github.io/stpR/reference/log_item.html","id":null,"dir":"Reference","previous_headings":"","what":"Primary utility for logging items to text metadata items for the stpR package. — log_item","title":"Primary utility for logging items to text metadata items for the stpR package. — log_item","text":"Logs assert failures, comments, todos review.  save_metadata_global include_metadata_log_items must set TRUE project_dictionary object items logged. Expected initial setup steps, may want avoid logging log_items values. avoid overhead maintaining meaningful, individual ids log item, default stp_id set \"99999\".  instances logged (including duplicate items, etc.). Function created remove individual log items. final run documentation per iteratio data set processed.","code":""},{"path":"https://rweberc.github.io/stpR/reference/log_item.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Primary utility for logging items to text metadata items for the stpR package. — log_item","text":"","code":"log_item(   type,   item,   add_item = NULL,   priority = NULL,   stp_id = \"99999\",   project_dictionary = get_project_dictionary(),   project_directory = here::here() )"},{"path":"https://rweberc.github.io/stpR/reference/log_item.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Primary utility for logging items to text metadata items for the stpR package. — log_item","text":"type String value indicating type item log.  Either \"ALERT\", \"TODO\", \"COMMENT\". item String value item log. add_item Additional item log.  used assert_distinct, assert_cases, assert_order output. priority String value indicating priority item log.  TBD still useful field include stp_id Id stp_ob entity. Defaults \"99999\".  significant usage strR logging functions, eval_map(), etc. project_dictionary project_dictionary object, default output get_project_dictionary() function. project_directory project_directory object, default output ::() function.","code":""},{"path":"https://rweberc.github.io/stpR/reference/log_item.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Primary utility for logging items to text metadata items for the stpR package. — log_item","text":"","code":"# \\donttest{ # Example 1 ---------------------------------- log_item(   type = \"TODO\",   item = \"Create function to reset all log_item metadata\",   priority = \"1\"  )  # Example 2 ---------------------------------- # Called by assert_cases.R function log_item(type = \"ALERT\",     item = eval_logic_assert_string,     priority = \"1\",  ) #> Error in eval(expr, envir, enclos): object 'eval_logic_assert_string' not found # }"},{"path":"https://rweberc.github.io/stpR/reference/output_data_to_console.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal utility to output data frame and messages to the console based on several conditions. — output_data_to_console","title":"Internal utility to output data frame and messages to the console based on several conditions. — output_data_to_console","text":"Internal utility output data frame messages console based several conditions.","code":""},{"path":"https://rweberc.github.io/stpR/reference/output_data_to_console.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal utility to output data frame and messages to the console based on several conditions. — output_data_to_console","text":"","code":"output_data_to_console(   df,   header_text = NULL,   cases_text = NULL,   no_cases_text = \"No cases to report\",   see_returned_object_text = \"See returned object for further details\" )"},{"path":"https://rweberc.github.io/stpR/reference/output_data_to_console.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal utility to output data frame and messages to the console based on several conditions. — output_data_to_console","text":"df data frame output console. header_text text printed data frame. cases_text text printed data frame cases report. no_cases_text text printed cases report. see_returned_object_text text printed 9 rows data frame.","code":""},{"path":"https://rweberc.github.io/stpR/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://rweberc.github.io/stpR/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://rweberc.github.io/stpR/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://rweberc.github.io/stpR/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://rweberc.github.io/stpR/reference/qa_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"A dataset for testing stpR setup utilities — qa_tbl","title":"A dataset for testing stpR setup utilities — qa_tbl","text":"dataset used illustrate test setup utilities stpR. convention, columns caps used denote raw data, columns lower case used denote standardized data.","code":""},{"path":"https://rweberc.github.io/stpR/reference/qa_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A dataset for testing stpR setup utilities — qa_tbl","text":"","code":"qa_tbl"},{"path":"https://rweberc.github.io/stpR/reference/qa_tbl.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A dataset for testing stpR setup utilities — qa_tbl","text":"data frame 300 rows--one row per col_id col_id col_id event_date event_date age age stage stage los los ebl ebl asa asa trt trt approach approach visit_codes visit_codes EVENT_DATE_RAW EVENT_DATE_RAW AGE_RAW AGE_RAW STAGE_RAW STAGE_RAW LOS_RAW LOS_RAW EBL_RAW EBL_RAW ASA_RAW ASA_RAW TRT_RAW TRT_RAW APPROACH_RAW APPROACH_RAW VISIT_CODES_RAW VISIT_CODES_RAW visit_type visit_type","code":""},{"path":"https://rweberc.github.io/stpR/reference/replace_cases.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility to update individual column values within a data set. — replace_cases","title":"Utility to update individual column values within a data set. — replace_cases","text":"tracking data update occurences.  updated code original.  Updated include ability update multiple columns .","code":""},{"path":"https://rweberc.github.io/stpR/reference/replace_cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility to update individual column values within a data set. — replace_cases","text":"","code":"replace_cases(xyz)"},{"path":"https://rweberc.github.io/stpR/reference/replace_cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility to update individual column values within a data set. — replace_cases","text":"xyz abc","code":""},{"path":"https://rweberc.github.io/stpR/reference/replace_cases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility to update individual column values within a data set. — replace_cases","text":"dataframe updated values","code":""},{"path":"https://rweberc.github.io/stpR/reference/replace_cases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility to update individual column values within a data set. — replace_cases","text":"","code":"# \\donttest{    replace_cases() #> NULL  # }"},{"path":"https://rweberc.github.io/stpR/reference/update_stp_filtered.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function to update the stp_ob ","title":"Utility function to update the stp_ob ","text":"Used primarily internally stpR package.","code":""},{"path":"https://rweberc.github.io/stpR/reference/update_stp_filtered.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function to update the stp_ob ","text":"","code":"update_stp_filtered(   df_name,   ref_ob,   update_ob,   stp_id_var,   id_vars,   group_by_vars,   keep_logic,   highlight,   issue,   notes,   report,   perform_compare,   project_dictionary,   project_directory )"},{"path":"https://rweberc.github.io/stpR/reference/update_stp_filtered.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function to update the stp_ob ","text":"df_name String name data frame filtered. ref_ob Reference object used filter data frame. update_ob Update object used filter data frame. stp_id_var String identifier case. id_vars String vector id variables used filter data frame. group_by_vars String vector group variables used filter data frame. keep_logic String logic used filter data frame. highlight Boolean indicate case highlighted. Defaults FALSE. issue Boolean indicate case flagged issue. Defaults FALSE. notes String notes associated case. report Boolean indicate case flagged reporting. Defaults TRUE. perform_compare Boolean indicate case flagged comparison. Defaults TRUE. project_dictionary project_dictionary object. project_directory project_directory object.","code":""},{"path":"https://rweberc.github.io/stpR/reference/update_stp_mappings.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function to update the stp_ob ","title":"Utility function to update the stp_ob ","text":"Used primarily internally stpR package.","code":""},{"path":"https://rweberc.github.io/stpR/reference/update_stp_mappings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function to update the stp_ob ","text":"","code":"update_stp_mappings(   df_name,   ref_ob,   update_ob,   from,   to,   std_proc_na,   highlight,   issue,   notes,   report,   perform_compare,   stp_id_var,   project_dictionary,   project_directory )"},{"path":"https://rweberc.github.io/stpR/reference/update_stp_mappings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function to update the stp_ob ","text":"df_name String name data frame filtered. ref_ob Reference object used filter data frame. update_ob Update object used filter data frame. string value column(s) data frame represent columns processed current data set string value column(s) data frame represent columns processed current data set. std_proc_na function applied column(s) determine values considered \"standard processing\" NA values.  field used cases processing values numbers, necessary know \"typically\" processed values, helpful know values readily processed standard processing well handled current data set. highlight Boolean indicate case highlighted. Defaults FALSE. issue Boolean indicate case flagged issue. Defaults FALSE. notes String notes associated case. report Boolean indicate case flagged reporting. Defaults TRUE. perform_compare Boolean indicate case flagged comparison. Defaults TRUE. project_dictionary project_dictionary object. project_directory project_directory object.","code":""}]
